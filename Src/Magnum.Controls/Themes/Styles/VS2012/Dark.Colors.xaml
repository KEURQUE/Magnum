<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

  
  <Color x:Key="MainWindowBackgroundColor">#2D2D30</Color>
  <Color x:Key="MainWindowInnerBackgroundColor">#1E1E1E</Color>
  <Color x:Key="ToolbarBackgroundColor">#595959</Color>
  <Color x:Key="ToolbarInnerBackgroundColor">#333337</Color>
  <Color x:Key="ToolbarBorderColor">#3F3F46</Color>
  <Color x:Key="SearchTextBarMouseOverBackgroundColor">#3f3f46</Color>

  <Color x:Key="TextColor">White</Color>
  <Color x:Key="InverseTextColor">Black</Color>
  <Color x:Key="DisabledTextColor">#9a9a9a</Color>

  <Color x:Key="AccentColor">#007ACC</Color>
  <Color x:Key="AccentHighlightColor">#1C97EA</Color>
  <Color x:Key="AccentDoubleHighlightColor">#52B0EF</Color>
  <Color x:Key="AccentTripleHighlightColor">#1C97EA</Color>

  <Color x:Key="GlowColor">#007ACC</Color>

  <Color x:Key="ControlTextColor">White</Color>
  <Color x:Key="ControlHighlightedColor">#595959</Color>
  <Color x:Key="ControlOpenColor">#1B1B1C</Color>
  <Color x:Key="DisabledColor">#3F3F46</Color>

  <Color x:Key="SeparatorColor">#333337</Color>
  <Color x:Key="SplitterColor">#3F3F46</Color>

  <Color x:Key="DragUnselected">#FF999999</Color>
  <Color x:Key="DragSelected">#FF59A8DE</Color>

  <!-- Main Colors -->
  <Color x:Key="MainColor">#FF595959</Color>
  <Color x:Key="HoverColor">#FF393939</Color>
  <Color x:Key="DefaultColor">#FF9BB1C5</Color>
  <Color x:Key="LightColor">#FF333333</Color>
  <Color x:Key="ShadeColor">#FF434343</Color>
  <Color x:Key="GlyphColor">#FFD1D1D1</Color>

  <Color x:Key="DisabledBackgroundColor">#FF787878</Color>
  <Color x:Key="TopGradientSelectColor">#FFFFFFFF</Color>
  <Color x:Key="BottomGradientSelectColor">#FF737373</Color>

  <Color x:Key="BlackColor">#FF000000</Color>
  <Color x:Key="WhiteColor">#FFFFFFFF</Color>
  <Color x:Key="NormalBorderColor">#FF333333</Color>

  <!--Fonts-->
  <FontFamily x:Key="HeaderFontFamily">
    Segoe UI, Segoe UI Light, Lucida Sans Unicode, Verdana
  </FontFamily>

  <!--Shadow-->
  <DropShadowEffect x:Key="StandardDropShadow" ShadowDepth="3" Opacity="0.6" Direction="305" />

  <!-- Patterns -->
  <SolidColorBrush x:Key="DarkSquareColor" Color="#18FFFFFF" />
  <SolidColorBrush x:Key="LightSquareColor" Color="#34FFFFFF" />
  <SolidColorBrush x:Key="DarkGrayOverlay" Color="#F11E1E1E"/>

  <DrawingBrush x:Key="CheckeredPattern" Viewport="0,0,20,20" ViewportUnits="Absolute" Stretch="None" TileMode="Tile">
    <DrawingBrush.Drawing>
      <DrawingGroup>
        <GeometryDrawing Brush="{DynamicResource DarkSquareColor}">
          <GeometryDrawing.Geometry>
            <GeometryGroup>
              <RectangleGeometry Rect="0,0,10,10"/>
              <RectangleGeometry Rect="10,10,10,10"/>
            </GeometryGroup>
          </GeometryDrawing.Geometry>
        </GeometryDrawing>
        <GeometryDrawing Brush="{DynamicResource LightSquareColor}">
          <GeometryDrawing.Geometry>
            <GeometryGroup>
              <RectangleGeometry Rect="10,0,10,10"/>
              <RectangleGeometry Rect="0,10,10,10"/>
            </GeometryGroup>
          </GeometryDrawing.Geometry>
        </GeometryDrawing>
      </DrawingGroup>
    </DrawingBrush.Drawing>
  </DrawingBrush>

  <SolidColorBrush x:Key="MyButtonHoverBrush" Color="YellowGreen" />
  <SolidColorBrush x:Key="MyButtonPressedBrush" Color="Maroon" />

  <Style x:Key="MyCloseButtonStyle" TargetType="Button">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal"/>
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Background" Storyboard.TargetProperty="(Border.Background)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource MyButtonHoverBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Background" Storyboard.TargetProperty="(Border.Background)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource MyButtonPressedBrush}"></DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="Background" CornerRadius="0,0,2,0" Background="Green">
              <Border Margin="1,0,1,1" BorderBrush="#59FFFFFF" BorderThickness="1" CornerRadius="0,0,1,0"/>
            </Border>
            <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
            <Path x:Name="path" Fill="White" Margin="0,0,0,1" Visibility="Collapsed"
	                Height="6"
		Width="7"
		Stretch="Fill"
		Opacity="1"
		Data="M 2,6 C2,6 3,6 3,6 3,6 3,5 3,5 3,5 4,5 4,5 4,5 4,6 4,6 4,6 5,6 5,6 5,6 7,6 7,6 7,6 7,5 7,5 7,5 6,5 6,5 6,5 6,4 6,4 6,4 5,4 5,4 5,4 5,2 5,2 5,2 6,2 6,2 6,2 6,1 6,1 6,1 7,1 7,1 7,1 7,0 7,0 7,0 5,0 5,0 5,0 4,0 4,0 4,0 4,1 4,1 4,1 3,1 3,1 3,1 3,0 3,0 3,0 2,0 2,0 2,0 0,0 0,0 0,0 0,1 0,1 0,1 1,1 1,1 1,1 1,2 1,2 1,2 2,2 2,2 2,2 2,4 2,4 2,4 1,4 1,4 1,4 1,5 1,5 1,5 0,5 0,5 0,5 0,6 0,6 0,6 2,6 2,6 z"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  
  
  
  <!-- MessageBox... Need to put styles here because the control is stupid as hell -->

  <Style x:Key="CloseButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="Background" Value="{DynamicResource WindowTitleColorBrush}" />
    <Setter Property="Foreground" Value="{DynamicResource BlackBrush}" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Margin" Value="0,0,-1,0" />
    <Setter Property="Width" Value="34" />
    <Setter Property="Height" Value="34" />
    <Setter Property="Padding" Value="1" />
    <Setter Property="Opacity" Value="1" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid x:Name="grid">
            <Path 
              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
              Margin="{TemplateBinding Padding}"
              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
              SnapsToDevicePixels="True"
              Data="F1M0,0L2,0 5,3 8,0 10,0 6,4 10,8 8,8 5,5 2,8 0,8 4,4 0,0z"
              Fill="White" Opacity="1" />
            <Grid.Style>
              <Style TargetType="{x:Type Grid}">
                <Setter Property="Background" Value="{DynamicResource WindowTitleColorBrush}"/>
                <Style.Triggers>
                  <DataTrigger Binding="{Binding IsBusy}" Value="True">
                    <Setter Property="Background" Value="Transparent"/>
                  </DataTrigger>
                  <DataTrigger Binding="{Binding IsMessageBoxShowing}" Value="True">
                    <Setter Property="Background" Value="Transparent"/>
                  </DataTrigger>
                </Style.Triggers>
              </Style>
            </Grid.Style>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="grid" Property="Background"
                                    Value="{DynamicResource ControlHighlightedColorBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter TargetName="grid" Property="Background" Value="{DynamicResource AccentColorBrush}" />
              <Setter Property="Foreground" Value="{DynamicResource TabBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
              <Setter Property="Foreground" Value="#ADADAD" />
            </Trigger>
            <Trigger SourceName="grid" Property="Background" Value="Transparent">
              <Setter Property="Opacity" Value="0.6" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="ButtonKey" TargetType="{x:Type Button}">
    <Setter Property="Background" Value="{DynamicResource WindowTitleColorBrush}" />
    <Setter Property="Foreground" Value="{DynamicResource BlackBrush}" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Width" Value="24" />
    <Setter Property="Height" Value="24" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="Opacity" Value="1" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid x:Name="grid">
            <ContentPresenter x:Name="contentPresenter"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              Margin="{TemplateBinding Padding}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              Content="{TemplateBinding Content}"
                              ContentTemplate="{TemplateBinding ContentTemplate}"/>
            <Grid.Style>
              <Style TargetType="{x:Type Grid}">
                <Setter Property="Background" Value="{DynamicResource WindowTitleColorBrush}"/>
                <Style.Triggers>
                  <DataTrigger Binding="{Binding IsBusy}" Value="True">
                    <Setter Property="Background" Value="Transparent"/>
                  </DataTrigger>
                  <DataTrigger Binding="{Binding IsMessageBoxShowing}" Value="True">
                    <Setter Property="Background" Value="Transparent"/>
                  </DataTrigger>
                </Style.Triggers>
              </Style>
            </Grid.Style>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="grid" Property="Background"
                                    Value="{DynamicResource AccentColorBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter TargetName="grid" Property="Background" Value="{DynamicResource ControlHighlightedColorBrush}" />
              <Setter Property="Foreground" Value="{DynamicResource TabBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
              <Setter Property="Foreground" Value="#ADADAD" />
            </Trigger>
            <Trigger SourceName="grid" Property="Background" Value="Transparent">
              <Setter Property="Opacity" Value="0.6" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--<Style x:Key="MessageBoxStyle" TargetType="{x:Type xctk:MessageBox}">
    <Setter Property="Background" Value="#2D2D30" />
    <Setter Property="BorderBrush" Value="Transparent" />
    <Setter Property="ButtonRegionBackground" Value="Transparent" />
    <Setter Property="CaptionForeground" Value="#9a9a9a" />
    <Setter Property="CaptionShadowBrush" Value="Transparent" />
    <Setter Property="WindowBorderBrush" Value="#3F3F46" />
    <Setter Property="WindowBackground" Value="#2D2D30" />
    <Setter Property="WindowOpacity" Value="1" />
    <Setter Property="Foreground" Value="White"/>
    <Setter Property="CloseButtonStyle" Value="{StaticResource CloseButtonStyle}"/>
    <Setter Property="YesButtonStyle" Value="{StaticResource ButtonKey}"/>
    <Setter Property="NoButtonStyle" Value="{StaticResource ButtonKey}"/>
    <Setter Property="CancelButtonStyle" Value="{StaticResource ButtonKey}"/>
  </Style> -->
  <!-- End MessageBox styling -->

</ResourceDictionary>