<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:vm="clr-namespace:Magnum.Core.ViewModels;assembly=Magnum.Core"
             xmlns:Converters="clr-namespace:Magnum.Controls.Converters"
             xmlns:FilterableTreeView="clr-namespace:Magnum.Controls.FilterableTreeView"
             mc:Ignorable="d">
  <Style TargetType="{x:Type FilterableTreeView:FilterableTreeView}">
    <Style.Resources>
      <Converters:TreeNodeToImageConverter x:Key="treeNodeToImageConverter" />
      <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    </Style.Resources>
    <Setter Property="Background" Value="{DynamicResource MainWindowInnerBackgroundBrush}"/>
    <Setter Property="BorderBrush" Value="Transparent"/>
    <Setter Property="BorderThickness" Value="0"/>
    <Setter Property="ItemContainerStyle">
      <Setter.Value>
        <Style TargetType="{x:Type TreeViewItem}">
          <Setter Property="IsSelected" Value="{Binding IsSelected}" />
          <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
          <Setter Property="Visibility" Value="{Binding Path=IsMatch, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}"/>
          <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
          <Setter Property="Background" Value="Transparent" />
          <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
          <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
          <Setter Property="Padding" Value="1,0,0,0" />
          <Setter Property="Template">
            <Setter.Value>
              <ControlTemplate TargetType="{x:Type TreeViewItem}">
                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="19" Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                  </Grid.ColumnDefinitions>
                  <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition />
                  </Grid.RowDefinitions>
                  <ToggleButton x:Name="Expander" Style="{DynamicResource NuclearTreeViewItemToggleButton}" IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="{x:Null}" />
                  <Border Grid.Column="1" x:Name="Selection_Border">
                    <Grid Width="Auto" Height="Auto">
                      <Border x:Name="IsMatchBorder" Opacity="0" Background="LightGoldenrodYellow" BorderBrush="Goldenrod" BorderThickness="1" CornerRadius="3" Margin="1"/>
                      <Border x:Name="MainBorder" Opacity="0" Background="{DynamicResource MainWindowInnerBackgroundBrush}"/>
                      <Border x:Name="SelectionBorder" Opacity="0" Background="{DynamicResource AccentColorBrush}"/>
                      <Border x:Name="HoverBorder" Opacity="0" Background="{DynamicResource MainWindowInnerBackgroundBrush}"/>
                      <ContentPresenter x:Name="PART_Header" ContentSource="Header" d:LayoutOverrides="Width" Height="Auto" Margin="2,2,500,2" />
                    </Grid>
                  </Border>
                  <ItemsPresenter Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="1" x:Name="ItemsHost" />
                </Grid>
                <ControlTemplate.Triggers>
                  <Trigger Property="IsExpanded" Value="false">
                    <Setter Property="Visibility" Value="Collapsed" TargetName="ItemsHost" />
                  </Trigger>
                  <Trigger Property="HasItems" Value="false">
                    <Setter Property="Visibility" Value="Hidden" TargetName="Expander" />
                  </Trigger>
                  <MultiTrigger>
                    <MultiTrigger.Conditions>
                      <Condition Property="IsSelected" Value="true" />
                      <Condition Property="IsSelectionActive" Value="true" />
                    </MultiTrigger.Conditions>
                    <Setter Property="Foreground" Value="White" />
                    <Setter Property="Background" TargetName="Selection_Border" Value="{DynamicResource AccentColorBrush}" />
                    <Setter Property="Opacity" TargetName="Selection_Border" Value="1" />
                  </MultiTrigger>
                  <MultiTrigger>
                    <MultiTrigger.Conditions>
                      <Condition Property="IsSelected" Value="true" />
                      <Condition Property="IsSelectionActive" Value="false" />
                    </MultiTrigger.Conditions>
                    <Setter Property="Foreground" Value="White" />
                    <Setter Property="Background" TargetName="Selection_Border" Value="{DynamicResource DisabledColorBrush}" />
                    <Setter Property="Opacity" TargetName="Selection_Border" Value="1" />
                  </MultiTrigger>
                  <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="{DynamicResource DisabledTextBrush}" />
                  </Trigger>
                  <DataTrigger Binding="{Binding Searched}" Value="True">
                    <Setter Property="Opacity" TargetName="IsMatchBorder" Value="0.40" />
                  </DataTrigger>
                </ControlTemplate.Triggers>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
          <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
              <Setter Property="Foreground">
                <Setter.Value>
                  <SolidColorBrush Color="White"/>
                </Setter.Value>
              </Setter>
            </Trigger>
          </Style.Triggers>
        </Style>
      </Setter.Value>
    </Setter>

    <Setter Property="ItemTemplate">
      <Setter.Value>
        <HierarchicalDataTemplate DataType="{x:Type vm:TreeNodeViewModel}" ItemsSource="{Binding Path=Children, Mode=OneWay}">
          <StackPanel Orientation="Horizontal" Margin="2 0 4 0">
            <Image Width="18" Height="18" Margin="0 0 4 0" Source="{Binding Converter={StaticResource treeNodeToImageConverter}}"/>
            <TextBlock Text="{Binding Path=Title}" />
            <TextBlock Text="{Binding Path=ItemType}"
                       Margin="4,0,0,0"
                       Foreground="{DynamicResource DisabledTextBrush}"
                       Focusable="False"
                       FontStyle="Italic"/>
          </StackPanel>
        </HierarchicalDataTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>
