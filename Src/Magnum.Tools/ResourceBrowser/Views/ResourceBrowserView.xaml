<UserControl x:Class="Magnum.Tools.ResourceBrowser.Views.ResourceBrowserView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:Controls="clr-namespace:Magnum.Controls.ModuleToolbar;assembly=Magnum.Controls"
             xmlns:converters="clr-namespace:Magnum.Controls.Converters;assembly=Magnum.Controls"
             xmlns:FilterableTreeView="clr-namespace:Magnum.Controls.FilterableTreeView;assembly=Magnum.Controls"
             xmlns:behaviors="clr-namespace:Magnum.Controls.Behaviors;assembly=Magnum.Controls"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:vm="clr-namespace:Magnum.Core.ViewModels;assembly=Magnum.Core"
             xmlns:local="clr-namespace:Magnum.Tools.ResourceBrowser.Models"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
  <UserControl.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Magnum.Controls;component/Themes/Styles/Brushes.xaml" />
      </ResourceDictionary.MergedDictionaries>

      <Style TargetType="{x:Type TreeView}">
        <Style.Resources>
          <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        </Style.Resources>
        <Setter Property="Background" Value="{DynamicResource MainWindowInnerBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="ItemContainerStyle">
          <Setter.Value>
            <Style TargetType="{x:Type TreeViewItem}">
              <Setter Property="IsSelected" Value="{Binding IsSelected}" />
              <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
              <Setter Property="Visibility" Value="{Binding Path=IsMatch, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}"/>
              <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
              <Setter Property="Background" Value="Transparent" />
              <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
              <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
              <Setter Property="Padding" Value="1,0,0,0" />
              <Setter Property="Template">
                <Setter.Value>
                  <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid>
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="19" Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                      </Grid.ColumnDefinitions>
                      <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition />
                      </Grid.RowDefinitions>
                      <ToggleButton x:Name="Expander" Style="{DynamicResource NuclearTreeViewItemToggleButton}" IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="{x:Null}" />
                      <Border Grid.Column="1" x:Name="Selection_Border">
                        <Grid Width="Auto" Height="Auto">
                          <Border x:Name="IsMatchBorder" Opacity="0" Background="LightGoldenrodYellow" BorderBrush="Goldenrod" BorderThickness="1" CornerRadius="3" Margin="1"/>
                          <Border x:Name="MainBorder" Opacity="0" Background="{DynamicResource MainWindowInnerBackgroundBrush}"/>
                          <Border x:Name="SelectionBorder" Opacity="0" Background="{DynamicResource AccentColorBrush}"/>
                          <Border x:Name="HoverBorder" Opacity="0" Background="{DynamicResource MainWindowInnerBackgroundBrush}"/>
                          <ContentPresenter x:Name="PART_Header" ContentSource="Header" d:LayoutOverrides="Width" Height="Auto" Margin="2,2,500,2" />
                        </Grid>
                      </Border>
                      <ItemsPresenter Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="1" x:Name="ItemsHost" />
                    </Grid>
                    <ControlTemplate.Triggers>
                      <Trigger Property="IsExpanded" Value="false">
                        <Setter Property="Visibility" Value="Collapsed" TargetName="ItemsHost" />
                      </Trigger>
                      <Trigger Property="HasItems" Value="false">
                        <Setter Property="Visibility" Value="Hidden" TargetName="Expander" />
                      </Trigger>
                      <MultiTrigger>
                        <MultiTrigger.Conditions>
                          <Condition Property="IsSelected" Value="true" />
                          <Condition Property="IsSelectionActive" Value="true" />
                        </MultiTrigger.Conditions>
                        <Setter Property="Foreground" Value="White" />
                        <Setter Property="Background" TargetName="Selection_Border" Value="{DynamicResource AccentColorBrush}" />
                        <Setter Property="Opacity" TargetName="Selection_Border" Value="1" />
                      </MultiTrigger>
                      <MultiTrigger>
                        <MultiTrigger.Conditions>
                          <Condition Property="IsSelected" Value="true" />
                          <Condition Property="IsSelectionActive" Value="false" />
                        </MultiTrigger.Conditions>
                        <Setter Property="Foreground" Value="White" />
                        <Setter Property="Background" TargetName="Selection_Border" Value="{DynamicResource DisabledColorBrush}" />
                        <Setter Property="Opacity" TargetName="Selection_Border" Value="1" />
                      </MultiTrigger>
                      <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Foreground" Value="{DynamicResource DisabledTextBrush}" />
                      </Trigger>
                      <DataTrigger Binding="{Binding Searched}" Value="True">
                        <Setter Property="Opacity" TargetName="IsMatchBorder" Value="0.40" />
                      </DataTrigger>
                    </ControlTemplate.Triggers>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
              <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                  <Setter Property="Foreground">
                    <Setter.Value>
                      <SolidColorBrush Color="White"/>
                    </Setter.Value>
                  </Setter>
                </Trigger>
              </Style.Triggers>
            </Style>
          </Setter.Value>
        </Setter>

        <Setter Property="ItemTemplate">
          <Setter.Value>
            <HierarchicalDataTemplate DataType="{x:Type vm:TreeNodeViewModel}" ItemsSource="{Binding Path=Children, Mode=OneWay}">
              <StackPanel Orientation="Horizontal" Margin="2 0 4 0">
                <Image Width="18" Height="18" Margin="0 0 4 0" Source="{Binding Path=Icon}"/>
                <TextBlock Text="{Binding Path=Title}" />
                <TextBlock Text="{Binding Path=ItemType}"
                       Margin="4,0,0,0"
                       Foreground="{DynamicResource DisabledTextBrush}"
                       Focusable="False"
                       FontStyle="Italic"/>
              </StackPanel>
            </HierarchicalDataTemplate>
          </Setter.Value>
        </Setter>
      </Style>

      <BooleanToVisibilityConverter x:Key="boolToVisible"/>
      <converters:NullObjectToVisibilityConverter x:Key="nullToVisible"/>
      <converters:InverseNullObjectToVisibilityConverter x:Key="nullToCollapsed"/>
    </ResourceDictionary>
  </UserControl.Resources>

  <DockPanel>
    <Controls:ModuleToolbar DockPanel.Dock="Top" Background="{DynamicResource ToolbarBackgroundBrush}"
                            DataContext="{Binding}"/>

    <Grid Background="{DynamicResource MainWindowInnerBackgroundBrush}"
        TextElement.Foreground="{DynamicResource TextBrush}">
      <!-- Visible only when the DataPane is null -->
      <Grid Visibility="{Binding DataPane, Converter={StaticResource nullToVisible}, FallbackValue=Visible}">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="{Binding DataPaneWidth}" />
          <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <DockPanel Grid.Column="0">
          <TextBlock Text="Test" />
        </DockPanel>

        <GridSplitter Width="5" />

        <DockPanel Grid.Column="1">
          <TextBlock Text="Test 2" />
        </DockPanel>
      </Grid>

      <!-- Visible only when the DataPane exists -->
      <Grid Visibility="{Binding DataPane, Converter={StaticResource nullToCollapsed}, FallbackValue=Collapsed}">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="{Binding DataPaneWidth}" />
          <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <DockPanel Grid.Column="0">
          <TreeView x:Name="_TreeView"
              ItemsSource="{Binding DataPane.Items, Mode=OneWay}"
              HorizontalContentAlignment="Stretch"
              ScrollViewer.HorizontalScrollBarVisibility="Disabled"
              VirtualizingStackPanel.IsVirtualizing="False"
              Focusable="False"
              IsTabStop="False">
            <i:Interaction.Behaviors>
              <behaviors:BindableSelectedItemBehavior SelectedItem="{Binding CurrentlySelectedItem, Mode=TwoWay}"/>
            </i:Interaction.Behaviors>
            <TreeView.Background>
              <ImageBrush ImageSource="{DynamicResource ResourceBrowser_128x128}" AlignmentX="Center" AlignmentY="Bottom" Opacity="0.10" TileMode="None" Stretch="Uniform" />
            </TreeView.Background>
          </TreeView>
        </DockPanel>

        <GridSplitter Width="5" />

        <DockPanel Grid.Column="1">
          <!-- Visible only when the EditorPane is null -->
          <DockPanel Visibility="{Binding EditorPane, Converter={StaticResource nullToVisible}, FallbackValue=Visible}">
            <TextBlock Text="Test 2" />
          </DockPanel>

          <!-- Visible only when the EditorPane exists -->
          <Grid Visibility="{Binding EditorPane, Converter={StaticResource nullToCollapsed}, FallbackValue=Collapsed}"
              VerticalAlignment="Stretch" HorizontalAlignment="Stretch">

            <DockPanel Grid.Row="0">
              <ListBox x:Name="_ListBox"
                       ItemsSource="{Binding CurrentlySelectedItem.Files}">
                <ListBox.ItemsPanel>
                  <ItemsPanelTemplate>
                    <StackPanel Orientation="Vertical"/>
                  </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
                <ListBox.ItemTemplate>
                  <HierarchicalDataTemplate DataType="{x:Type local:ResourceBrowserItem}" ItemsSource="{Binding Path=Files, Mode=OneWay}">
                    <StackPanel Orientation="Horizontal" Margin="2 0 4 0">
                      <Image Width="18" Height="18" Margin="0 0 4 0" Source="{Binding Path=Icon}"/>
                      <TextBlock Text="{Binding Path=Title}" />
                      <TextBlock Text="{Binding Path=ItemType}"
                       Margin="4,0,0,0"
                       Foreground="{DynamicResource DisabledTextBrush}"
                       Focusable="False"
                       FontStyle="Italic"/>
                    </StackPanel>
                  </HierarchicalDataTemplate>
                </ListBox.ItemTemplate>
              </ListBox>
            </DockPanel>
          </Grid>
        </DockPanel>
      </Grid>
    </Grid>
  </DockPanel>
</UserControl>
